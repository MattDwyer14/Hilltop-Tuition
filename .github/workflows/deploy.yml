name: Build and deploy Python app to Azure Web App â€“ MattsPortfolio

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Package up your source (but omit any local venv or caches)
      - name: Upload source artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            ./
            !venv/
            !**/__pycache__/
            !**/*.pyc

jobs:
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: Production
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      - name: Download source artifact
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id:     ${{ secrets.CLIENTID }}
          tenant-id:     ${{ secrets.TENANTID }}
          subscription-id: ${{ secrets.SUBSCRIPTIONID }}

      - name: Deploy code to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name:  'WA-Hilltop-Tuition-27042025'
          slot-name: 'Production'
          package:   .

      - name: Install dependencies & run migrations
        uses: azure/webapps-deploy@v3
        with:
          app-name:  'WA-Hilltop-Tuition-27042025'
          slot-name: 'Production'
          # any commands here run *inside* your Web App container
          command: |
            cd /home/site/wwwroot

            # 1) Create & activate venv
            python3 -m venv antenv
            source antenv/bin/activate

            # 2) Install all requirements (logs to install.log)
            pip install --upgrade pip \
              2>&1 | tee install.log
            pip install -r requirements.txt \
              2>&1 | tee -a install.log

            # 3) Make migrations (logs to makemigrations.log)
            python manage.py makemigrations --verbosity 2 \
              2>&1 | tee makemigrations.log

            # 4) Apply migrations (logs to migrate.log)
            python manage.py migrate --verbosity 2 \
              2>&1 | tee migrate.log

            # 5) List applied vs pending (logs to showmigrations.log)
            python manage.py showmigrations \
              2>&1 | tee showmigrations.log

            # 6) Dump all logs so they surface in the Azure Log Stream
            cat install.log makemigrations.log migrate.log showmigrations.log
